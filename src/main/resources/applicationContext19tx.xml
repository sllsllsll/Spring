<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">


<context:property-placeholder location="jdbc.properties"></context:property-placeholder>

<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
    <property name="driverClassName" value="${jdbc.driver}"></property>
    <property name="url" value="${jdbc.url}"></property>
    <property name="username" value="${jdbc.username}"></property>
    <property name="password" value="${jdbc.password}"></property>

</bean>

    <bean id="accountDao" class="cn.happy.spring23tx.dao.AccountDao">
        <property name="dataSource" ref="dataSource"></property>

    </bean>

    <bean id="stockDao" class="cn.happy.spring23tx.dao.StockDao">
        <property name="dataSource" ref="dataSource"></property>

    </bean>
    <bean id="service" class="cn.happy.spring23tx.service.ServiceImpl">

        <property name="accountDao" ref="accountDao"></property>
        <property name="stockDao" ref="stockDao"></property>
    </bean>
<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" >
    <property name="dataSource" ref="dataSource"></property>
</bean>

   <!-- <bean id="serviceProxys" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager" ref="transactionManager"></property>
        <property name="target" ref="service"></property>
    <property name="transactionAttributes">
        <props>
            <prop key="add*">ISOLATION_DEFAULT,PROPAGATION_REQUIRED</prop>
            &lt;!&ndash; buy*的方法一旦抛出了stockException异常，事务回滚 ，如果抛出的是别的异常，不会回滚&ndash;&gt;
            <prop key="buy*">ISOLATION_DEFAULT,PROPAGATION_REQUIRED,-StockExection</prop>
        </props>
    </property>

    </bean>-->

    <!--<tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>-->
<tx:advice id="txAdvice" transaction-manager="transactionManager">
    <tx:attributes>
        <tx:method name="buy*" isolation="DEFAULT" propagation="REQUIRED" rollback-for="StockExection"/>
    </tx:attributes>
</tx:advice>

    <aop:config>
        <aop:pointcut id="mypoint" expression="execution(* *..service.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="mypoint"></aop:advisor>
    </aop:config>
</beans>